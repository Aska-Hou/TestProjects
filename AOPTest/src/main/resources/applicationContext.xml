<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="userService" class="org.example.service.UserServiceImpl"/>
    <bean id="log" class="org.example.log.BeforeLog"/>

<!--    <bean id="myAspect" class="org.example.aspect.MyAspect"/>-->
    <context:component-scan base-package="org.example.aspect"/>
    <context:component-scan base-package="org.example.*"/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

<!--    <aop:config>-->
<!--        切入点 execution(执行位置 public/private 类明.方法名(参数列表))-->
<!--        <aop:pointcut id="pointcut" expression="execution(* org.example.service.UserServiceImpl.*(..))"/>-->

<!--        引用的log 并配置执行的切入点-->
<!--        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->
    
<!--    <bean id="specialLog" class="org.example.log.SpecialLog"/>-->

<!--    <aop:config>-->
<!--        <aop:aspect ref="specialLog">-->
<!--            <aop:pointcut id="pointcut1" expression="execution(* org.example.service.UserServiceImpl.*(..))"/>-->
<!--            <aop:before method="specialBefore" pointcut-ref="pointcut1"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->


    <context:property-placeholder location="classpath:jdbc.properties"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
<!-- -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="org.example.dao"/>
    </bean>

<!--    账户余额改动 日志配置-->
    <aop:config>
        <aop:aspect ref="ormLog">
            <aop:pointcut id="moneyPointcut" expression="execution(* org.example.dao.AccountDao.*Account*(..))"/>
            <aop:after method="afterUpdateLog" pointcut-ref="moneyPointcut"/>
        </aop:aspect>
    </aop:config>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

<!--    <tx:advice id="transactionInterceptor" transaction-manager="transactionManager">-->
<!--        <tx:attributes>-->
<!--            <tx:method name="*" />-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->

<!--    <aop:config>-->
<!--        <aop:pointcut id="money-cut" expression="execution(* org.example.service.*Impl.*(..))"/>-->
<!--        <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="money-cut"/>-->
<!--    </aop:config>-->

    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <aop:config>
        <aop:aspect ref="logAspect">
            <aop:pointcut id="pointcut1" expression="@annotation(org.example.MyAnno)"/>
            <aop:before method="beforeLog" pointcut-ref="pointcut1" />
        </aop:aspect>
    </aop:config>
<!-- -->
</beans>